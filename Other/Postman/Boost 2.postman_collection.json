{
	"info": {
		"_postman_id": "8fa44547-1ad4-e1fb-53c1-9f93fe4a89b2",
		"name": "Boost 2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"_postman_id": "1dba24e7-188d-4ca6-aba0-30e8d1230b5b",
			"name": "CORS",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "OPTIONS",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{SERVER}}ping",
					"host": [
						"{{SERVER}}ping"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "23fb4440-3e63-4083-bcc5-367c38b14637",
			"name": "Install",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"admin@liveui.io\",\n  \"password\": \"password123\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}install",
					"host": [
						"{{SERVER}}install"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "47bd3566-5f69-4c88-837c-0981d55c5114",
			"name": "Demo",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"admin@liveui.io\",\n  \"password\": \"password123\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}demo",
					"host": [
						"{{SERVER}}demo"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "0c5b8809-4df0-4e82-a34e-4b56eb5a9e9c",
			"name": "Re-Install",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"admin@liveui.io\",\n  \"password\": \"password123\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}reinstall",
					"host": [
						"{{SERVER}}reinstall"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "c3b6d01d-9bd1-4d0f-b87a-28db94b23939",
			"name": "Un-Install",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"admin@liveui.io\",\n  \"password\": \"password123\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}uninstall",
					"host": [
						"{{SERVER}}uninstall"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "c691e47f-9a09-4ecd-b2e6-5bd779ade04f",
			"name": "Auth (BASIC)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0a4fca42-18ee-49ac-bbe5-0fdca7102e0a",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// Token check",
							"tests[\"Token has an id\"] = (jsonData[\"id\"].length > 10)",
							"tests[\"Token has a user\"] = (jsonData[\"user\"][\"id\"].length > 10)",
							"tests[\"Token has a token\"] = (jsonData[\"token\"].length > 10)",
							"tests[\"Token has expires\"] = (jsonData[\"expires\"] > 543533823)",
							"",
							"postman.setEnvironmentVariable(\"AUTH_TOKEN\", jsonData[\"token\"]);",
							"",
							"// JWT",
							"var jwtAuthExists = responseHeaders.hasOwnProperty(\"Authorization\") || responseHeaders.hasOwnProperty(\"authorization\");",
							"tests[\"JWT Token is present\"] = jwtAuthExists;",
							"",
							"if (jwtAuthExists) {",
							"    var a = responseHeaders[\"Authorization\"] || responseHeaders[\"authorization\"];",
							"    tests[\"JWT token has a bearer\"] = a.has(\"Bearer \");",
							"    tests[\"JWT token has a value\"] = (a.length > 15);",
							"    postman.setEnvironmentVariable(\"JWT_AUTH\", a.substring(7));",
							"}",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "0d43ff69-0ee0-44f2-b2f1-f0a273c92a0b",
						"type": "text/javascript",
						"exec": [
							"var authorize = 'var server = pm.environment.get(\"SERVER\");\\",
							"var token = pm.environment.get(\"AUTH_TOKEN\");\\",
							"pm.sendRequest({\\",
							"    url: server + \"token\",\\",
							"    method: \"GET\",\\",
							"    header: \"Authorization:Token \" + token\\",
							"}, function (err, response) {\\",
							"    console.log(response.headers);\\",
							"    if (response) {\\",
							"        var a = response.headers.get(\"authorization\").substring(7);\\",
							"        pm.environment.set(\"JWT_AUTH\", a);\\",
							"    }\\",
							"});';",
							"",
							"pm.environment.set(\"func:authorize\", authorize);"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@liveui.io",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"admin@liveui.io\",\n  \"password\": \"password123\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}auth",
					"host": [
						"{{SERVER}}auth"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "e560d30c-4930-4cdf-906d-d66aec4ba967",
			"name": "Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fb96d006-ff14-4369-ab66-b908f5816ac3",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// Token check",
							"tests[\"Token has an id\"] = (jsonData[\"id\"].length > 10)",
							"tests[\"Token has a user\"] = (jsonData[\"user\"][\"id\"].length > 10)",
							"tests[\"Token has a token\"] = (jsonData[\"token\"].length > 10)",
							"tests[\"Token has expires\"] = (jsonData[\"expires\"].length > 10)",
							"",
							"postman.setEnvironmentVariable(\"AUTH_TOKEN\", jsonData[\"token\"]);",
							"",
							"// JWT",
							"var jwtAuthExists = responseHeaders.hasOwnProperty(\"Authorization\") || responseHeaders.hasOwnProperty(\"authorization\");",
							"tests[\"JWT Token is present\"] = jwtAuthExists;",
							"",
							"if (jwtAuthExists) {",
							"    var a = responseHeaders[\"Authorization\"] || responseHeaders[\"authorization\"];",
							"    tests[\"JWT token has a bearer\"] = a.has(\"Bearer \");",
							"    tests[\"JWT token has a value\"] = (a.length > 15);",
							"    postman.setEnvironmentVariable(\"JWT_AUTH\", a.substring(7));",
							"}",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "bfe6c598-e7ad-4ae4-b73b-7aa7e15e77b5",
						"type": "text/javascript",
						"exec": [
							"var authorize = 'var server = pm.environment.get(\"SERVER\");\\",
							"var token = pm.environment.get(\"AUTH_TOKEN\");\\",
							"pm.sendRequest({\\",
							"    url: server + \"token\",\\",
							"    method: \"GET\",\\",
							"    header: \"Authorization:Token \" + token\\",
							"}, function (err, response) {\\",
							"    console.log(response.headers);\\",
							"    if (response) {\\",
							"        var a = response.headers.get(\"authorization\").substring(7);\\",
							"        pm.environment.set(\"JWT_AUTH\", a);\\",
							"    }\\",
							"});';",
							"",
							"pm.environment.set(\"func:authorize\", authorize);"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"admin@liveui.io\",\n  \"password\": \"admin\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}auth",
					"host": [
						"{{SERVER}}auth"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "665693a8-a35f-42ab-87cc-7cafc7557e6e",
			"name": "JWT refresh",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0c9fe589-fee6-417f-9105-96a38bbe8b6e",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// Token check",
							"tests[\"Token has an id\"] = (jsonData[\"id\"].length > 10)",
							"tests[\"Token has a user\"] = (jsonData[\"user\"][\"id\"].length > 10)",
							"tests[\"Token has expires\"] = (jsonData[\"expires\"] > 543533823)",
							"",
							"// JWT",
							"var jwtAuthExists = responseHeaders.hasOwnProperty(\"Authorization\") || responseHeaders.hasOwnProperty(\"authorization\");",
							"tests[\"JWT Token is present\"] = jwtAuthExists;",
							"",
							"if (jwtAuthExists) {",
							"    var a = responseHeaders[\"Authorization\"] || responseHeaders[\"authorization\"];",
							"    tests[\"JWT token has a bearer\"] = a.has(\"Bearer \");",
							"    tests[\"JWT token has a value\"] = (a.length > 15);",
							"    postman.setEnvironmentVariable(\"JWT_AUTH\", a.substring(7));",
							"}",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "90616aa4-124c-423d-bf50-1cdbe31f8fe6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Token {{AUTH_TOKEN}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"admin@liveui.io\",\n  \"password\": \"password123\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}token",
					"host": [
						"{{SERVER}}token"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "f6cc9e7c-434d-4236-961a-2bd3e8e14cce",
			"name": "JWT refresh",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1512bc88-43bb-4ec2-a819-b0872e3cae15",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// Token check",
							"tests[\"Token has an id\"] = (jsonData[\"id\"].length > 10)",
							"tests[\"Token has a user_id\"] = (jsonData[\"user\"][\"id\"].length > 10)",
							"tests[\"Token has expires\"] = (jsonData[\"expires\"] > 543533823)",
							"",
							"// JWT",
							"var jwtAuthExists = responseHeaders.hasOwnProperty(\"Authorization\") || responseHeaders.hasOwnProperty(\"authorization\");",
							"tests[\"JWT Token is present\"] = jwtAuthExists;",
							"",
							"if (jwtAuthExists) {",
							"    var a = responseHeaders[\"Authorization\"] || responseHeaders[\"authorization\"];",
							"    tests[\"JWT token has a bearer\"] = a.has(\"Bearer \");",
							"    tests[\"JWT token has a value\"] = (a.length > 15);",
							"    postman.setEnvironmentVariable(\"JWT_AUTH\", a.substring(7));",
							"}",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"token\": \"{{AUTH_TOKEN}}\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}token",
					"host": [
						"{{SERVER}}token"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "fb26b3cf-73a5-4383-a7ad-424f57f47e4e",
			"name": "Teams (teams)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "116dcf70-2c69-453a-a623-ab4762e9962b",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Admin\",\n    \"identifier\": \"admin5\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}teams",
					"host": [
						"{{SERVER}}teams"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "fd6b5d40-19fb-4a3d-8970-50dd13c06c9e",
			"name": "Teams (teams)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "50c4544a-37b5-4294-9dbe-c06e3fe7e21b",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"if (responseCode.code === 201) {",
							"    // Token check",
							"    tests[\"Team has an id\"] = (jsonData[\"id\"].length > 0)",
							"    tests[\"Team has an name\"] = (jsonData[\"name\"].length > 0)",
							"    tests[\"Team has an identifier\"] = (jsonData[\"identifier\"].length > 0)",
							"    ",
							"    postman.setEnvironmentVariable(\"TEST_TEAM_ID\", jsonData[\"id\"]);",
							"}",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");",
							"",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "56d344a5-51cb-4ee9-8641-250a8cfc94dd",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Admin Yo!\",\n    \"identifier\": \"admin-yo\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}teams",
					"host": [
						"{{SERVER}}teams"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "938db2b2-425f-403e-9dfb-c290bd4c978e",
			"name": "Teams (teams/check)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "dec41314-4b28-4144-b0ff-84ece146d04d",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"identifier\": \"admin\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}teams/check",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"check"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "14ca6afd-3e27-4c8b-a039-6dd8bfd32b32",
			"name": "Teams (teams/:id)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "81cd4170-4a0e-4db5-90b4-fd3cf82170a1",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"if (responseCode.code === 200) {",
							"    // Token check",
							"    tests[\"Team has an id\"] = (jsonData[\"id\"].length > 0)",
							"    tests[\"Team has an name\"] = (jsonData[\"name\"].length > 0)",
							"    tests[\"Team has an identifier\"] = (jsonData[\"identifier\"].length > 0)",
							"}",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");",
							"",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "19a1abfc-56ea-4447-8d56-05b2b7906765",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Admin\",\n    \"identifier\": \"admin5\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "698e6e2f-d00e-45ed-b24c-e70da9f6c3c1",
			"name": "Teams (teams/:id/link)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "bacdfa30-78f2-4948-86d6-9eee95a80e1f",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": \"{{TEST_USER_ID}}\",\n}"
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}/link",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}",
						"link"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "bb45b7e2-3fa3-48bc-b5d8-6f25ac5ccbad",
			"name": "Teams (teams/:id/unlink)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d01d357f-0e41-41de-8bf0-49ff320a6c93",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": \"{{TEST_USER_ID}}\",\n}"
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}/unlink",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}",
						"unlink"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "08a54d7f-9e89-4cc9-b762-63da63d3eb4c",
			"name": "Teams (teams/:id/users)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9755c07f-4230-4701-a491-d2b7c1aa5370",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Admin\",\n    \"identifier\": \"admin5\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}/users",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "aa3bd856-a5d8-4bc1-9274-9ab20fd529ca",
			"name": "Teams (teams/:id)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "16192de3-a019-427d-8562-ddf0bb2baec4",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Admin\",\n    \"identifier\": \"admin5\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "b8afaf91-6574-4f6e-b345-ffc343b15c68",
			"name": "Teams (teams/:id)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "dc69f392-b674-49ed-aad7-1d6f885713a8",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Admin\",\n    \"identifier\": \"admin5\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "ef1311d3-e215-4478-9e28-2950b7ed6bcc",
			"name": "Teams (teams/:id/config)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "600477c9-54af-41a9-8258-5bcdc511e5a2",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"if (responseCode.code === 200) {",
							"    tests[\"Config has a team_id\"] = (jsonData[\"team_id\"].length > 0)",
							"}",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");",
							"",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "97f737f8-dcd1-41b6-8577-1d136c72ef2d",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Admin\",\n    \"identifier\": \"admin5\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}/config",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}",
						"config"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "c29a74e7-7878-4ea2-8624-41c352ccfb31",
			"name": "Teams (teams/:id/config)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a72c6134-9233-4932-8191-c9eacbd1659f",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"if (responseCode.code === 200) {",
							"    tests[\"Config has a team_id\"] = (jsonData[\"team_id\"].length > 0)",
							"}",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");",
							"",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "19a1abfc-56ea-4447-8d56-05b2b7906765",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"theme\": {\n        \"primary_color\": \"000000\",\n        \"primary_background_color\": \"FFFFFF\",\n        \"primary_button_color\": \"FFFFFF\",\n        \"primary_button_background_color\": \"E94F92\"\n    },\n    \"apps\": {\n    \t\"ios\": \"https://itunes.apple.com/gb/app/rekola/id888759232?mt=8\",\n    \t\"android\": \"https://play.google.com/store/apps/details?id=cz.rekola.app\"\n    }\n}\t"
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}/config",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}",
						"config"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "df344d9a-111d-40a6-996a-07a51c4d533f",
			"name": "Users (users)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "476b1181-999e-4143-a808-c06c4df8796d",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}users",
					"host": [
						"{{SERVER}}users"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "380165e8-29c6-403e-b1db-34f87d835bb7",
			"name": "Users (users/global)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "692d2e1a-e43e-4587-b518-85fbe7ec8598",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}users/global?search=ad",
					"host": [
						"{{SERVER}}users"
					],
					"path": [
						"global"
					],
					"query": [
						{
							"key": "search",
							"value": "ad"
						}
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "70e9ec70-ddba-4dd8-8714-304a2aaaf7ab",
			"name": "Users (users)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "245c9eb5-1349-4660-8e3f-8a2e2ece34a5",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\n        \"email\": \"rafaj@mangoweb.cz\",\n        \"username\": \"rafiki270\",\n        \"lastname\": \"Ondrej\",\n        \"firstname\": \"Rafaj\",\n        \"password\": \"aaaaaa\"\n    }"
				},
				"url": {
					"raw": "{{SERVER}}users",
					"host": [
						"{{SERVER}}users"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "09dce218-e3b8-4b58-b9cb-21ac7f260fa6",
			"name": "Apps (apps)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b5bd4386-09e9-47ac-9eab-c0b25836a986",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}apps?limit=20",
					"host": [
						"{{SERVER}}apps"
					],
					"query": [
						{
							"key": "limit",
							"value": "20"
						}
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "990fab46-3c1b-4e70-a628-c48787422189",
			"name": "Apps (apps?filters)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b5bd4386-09e9-47ac-9eab-c0b25836a986",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}apps?limit=20&page=40&platform=ios",
					"host": [
						"{{SERVER}}apps"
					],
					"query": [
						{
							"key": "limit",
							"value": "20"
						},
						{
							"key": "page",
							"value": "40"
						},
						{
							"key": "platform",
							"value": "ios"
						}
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "e6686916-d97e-45ea-8efb-42f2382fd405",
			"name": "Apps (apps/overview)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "091247ec-a5f8-40a7-86f9-67f2f4912de9",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}apps/overview?limit=3",
					"host": [
						"{{SERVER}}apps"
					],
					"path": [
						"overview"
					],
					"query": [
						{
							"key": "limit",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "e3987cc3-f8e0-49b4-8de2-0c4239a2a433",
			"name": "Apps (teams/:id/apps/overview)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7cdb43e8-605a-4109-b4d9-2018354f7e6b",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// Token check",
							"tests[\"App has an id\"] = (jsonData[\"id\"].length > 0)",
							"tests[\"App has a name\"] = (jsonData[\"name\"].length > 0)",
							"tests[\"App has an identifier\"] = (jsonData[\"identifier\"].length > 2)",
							"",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "51d1f430-a5a1-45d2-9272-014852176c70",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}/apps/overview",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}",
						"apps",
						"overview"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "f00f9cf1-949e-44c9-92f2-26fa892ffabf",
			"name": "Apps (teams/:id/apps/info)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7cdb43e8-605a-4109-b4d9-2018354f7e6b",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// Token check",
							"tests[\"App has an id\"] = (jsonData[\"id\"].length > 0)",
							"tests[\"App has a name\"] = (jsonData[\"name\"].length > 0)",
							"tests[\"App has an identifier\"] = (jsonData[\"identifier\"].length > 2)",
							"",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "27f558bf-debf-40ba-8557-3583791ac25b",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}/apps/info",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}",
						"apps",
						"info"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "7b44b869-37de-418c-a4d4-d6635cafa66a",
			"name": "Apps (teams/:id/apps)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e5df00c9-6382-47b9-98ce-f2fc1870ff1b",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"// Token check",
							"tests[\"App has an id\"] = (jsonData[\"id\"].length > 0)",
							"tests[\"App has a name\"] = (jsonData[\"name\"].length > 0)",
							"tests[\"App has an identifier\"] = (jsonData[\"identifier\"].length > 2)",
							"",
							"postman.setEnvironmentVariable(\"APP_ID\", jsonData[\"id\"]);",
							"",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}/apps",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}",
						"apps"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "463a4bd0-cc69-4e26-96e2-c10f3ffce248",
			"name": "Apps (apps?token)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e5df00c9-6382-47b9-98ce-f2fc1870ff1b",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"// Token check",
							"tests[\"App has an id\"] = (jsonData[\"id\"].length > 0)",
							"tests[\"App has a name\"] = (jsonData[\"name\"].length > 0)",
							"tests[\"App has an identifier\"] = (jsonData[\"identifier\"].length > 2)",
							"",
							"postman.setEnvironmentVariable(\"APP_ID\", jsonData[\"id\"]);",
							"",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{SERVER}}apps?token={{TEST_UPLOAD_KEY}}&tags=tag1|tag2|tag3|tag4",
					"host": [
						"{{SERVER}}apps"
					],
					"query": [
						{
							"key": "token",
							"value": "{{TEST_UPLOAD_KEY}}"
						},
						{
							"key": "tags",
							"value": "tag1|tag2|tag3|tag4"
						}
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "69f8d09b-ddfa-44d1-a1bf-67eb46faaa4e",
			"name": "Apps (apps/:id)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{SERVER}}apps/{{APP_ID}}",
					"host": [
						"{{SERVER}}apps"
					],
					"path": [
						"{{APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "e41ba5c5-3098-46ff-888b-9bf5482c822b",
			"name": "Apps (apps/:id/auth)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c075b435-49e3-494c-940d-02f1613f4776",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"if (responseCode.code === 200) {",
							"    // Token check",
							"    tests[\"Download token has an ios url\"] = (jsonData[\"ios\"].length > 10)",
							"    tests[\"Download token has a file url\"] = (jsonData[\"file\"].length > 10)",
							"    tests[\"Download token has a token\"] = (jsonData[\"token\"].length > 10)",
							"    tests[\"Download token has a plist url\"] = (jsonData[\"plist\"].length > 10)",
							"    tests[\"Download token has an app_id\"] = (jsonData[\"app_id\"].length > 10)",
							"    ",
							"    postman.setEnvironmentVariable(\"DOWNLOAD_TOKEN\", jsonData[\"token\"]);",
							"}",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{SERVER}}apps/{{APP_ID}}/auth",
					"host": [
						"{{SERVER}}apps"
					],
					"path": [
						"{{APP_ID}}",
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "0e24100f-19c3-483c-8080-3a0bcd5b4186",
			"name": "Apps (apps/plist)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{SERVER}}apps/plist?token={{DOWNLOAD_TOKEN}}",
					"host": [
						"{{SERVER}}apps"
					],
					"path": [
						"plist"
					],
					"query": [
						{
							"key": "token",
							"value": "{{DOWNLOAD_TOKEN}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "65421014-24b1-4f89-85cc-84541d4732ea",
			"name": "Apps (apps/file)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{SERVER}}apps/file?token={{DOWNLOAD_TOKEN}}",
					"host": [
						"{{SERVER}}apps"
					],
					"path": [
						"file"
					],
					"query": [
						{
							"key": "token",
							"value": "{{DOWNLOAD_TOKEN}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "23fd22d9-755f-410b-a649-f5585a2c659b",
			"name": "Apps (apps/:id/tags)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{SERVER}}apps/{{APP_ID}}/tags",
					"host": [
						"{{SERVER}}apps"
					],
					"path": [
						"{{APP_ID}}",
						"tags"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "b4efa413-8f6d-470f-8095-9318cba80a9c",
			"name": "Apps (apps/:id)",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{SERVER}}apps/{{APP_ID}}",
					"host": [
						"{{SERVER}}apps"
					],
					"path": [
						"{{APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "73b3cd03-3662-45cb-b7e1-5c56b62fe610",
			"name": "Upload keys (keys)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{SERVER}}keys",
					"host": [
						"{{SERVER}}keys"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "758dbfe2-5e0c-42ad-bc88-884f9e89f5f7",
			"name": "Upload keys (apps/:id/keys)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}/keys",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}",
						"keys"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "9c9ab6d5-9c81-4afd-ab0f-13be7ddeb677",
			"name": "Upload keys (keys/:id)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{SERVER}}keys/{{TEST_UPLOAD_KEY_ID}}",
					"host": [
						"{{SERVER}}keys"
					],
					"path": [
						"{{TEST_UPLOAD_KEY_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "b8308308-05ab-46fa-9810-60a018ba9ea9",
			"name": "Upload keys (apps/:id/keys)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "710a0a32-3cbc-4cb2-a3d1-aaa38465ab17",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"// Token check",
							"tests[\"Key has an id\"] = (jsonData[\"id\"].length > 0)",
							"tests[\"Key has an name\"] = (jsonData[\"name\"].length > 0)",
							"tests[\"Key has a token\"] = (jsonData[\"token\"].length > 0)",
							"tests[\"Key has a correct team_id\"] = (jsonData[\"team_id\"] == postman.getEnvironmentVariable(\"TEST_TEAM_ID\"))",
							"",
							"postman.setEnvironmentVariable(\"TEST_UPLOAD_KEY_ID\", jsonData[\"id\"]);",
							"postman.setEnvironmentVariable(\"TEST_UPLOAD_KEY\", jsonData[\"token\"]);",
							"",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Upload key yo!\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}/keys",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}",
						"keys"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "30f9ef31-c089-4456-92c5-eb6a6f80be26",
			"name": "Upload keys (keys/:id)",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Upload key changed yohoho!\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}keys/{{TEST_UPLOAD_KEY_ID}}",
					"host": [
						"{{SERVER}}keys"
					],
					"path": [
						"{{TEST_UPLOAD_KEY_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "100e3ab7-cb04-4923-95b6-fd28d5724ebb",
			"name": "Upload keys (keys/:id)",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{SERVER}}keys/{{TEST_UPLOAD_KEY_ID}}",
					"host": [
						"{{SERVER}}keys"
					],
					"path": [
						"{{TEST_UPLOAD_KEY_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "d54cc2b8-6bdb-4b80-baa9-f51043e47f32",
			"name": "Unknown URL",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}unknown",
					"host": [
						"{{SERVER}}unknown"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "a05ab05c-2d1b-4ea4-89e0-1b71dbbf91ae",
			"name": "Database info",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}tables",
					"host": [
						"{{SERVER}}tables"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "466445c4-fe44-4494-ad4a-44332ae7c0c5",
			"name": "Settings (settings)",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}settings",
					"host": [
						"{{SERVER}}settings"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "a62b7188-a18f-491e-a73c-44d6c7429317",
			"name": "Settings (settings?plain)",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}settings?plain=true",
					"host": [
						"{{SERVER}}settings"
					],
					"query": [
						{
							"key": "plain",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "8b13ef4a-e678-43bb-b568-e9fb851a2cad",
			"name": "Settings (settings)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a5091550-b98b-464b-bb6f-abfc9a340a46",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"// Token check",
							"tests[\"Key has an id\"] = (jsonData[\"id\"].length > 0)",
							"tests[\"Key has an name\"] = (jsonData[\"name\"].length > 0)",
							"tests[\"Key has a token\"] = (jsonData[\"config\"].length > 0)",
							"",
							"postman.setEnvironmentVariable(\"TEST_SETTING_ID\", jsonData[\"id\"]);",
							"",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"test_url2\",\n\t\"config\": \"https://www.boostappstore.com\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}settings",
					"host": [
						"{{SERVER}}settings"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "68f6395b-3e72-4ff4-9c57-b84431006936",
			"name": "Settings (settings/:id)",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"test_url3\",\n\t\"config\": \"https://www.boostappstore.com :)\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}settings/{{TEST_SETTING_ID}}",
					"host": [
						"{{SERVER}}settings"
					],
					"path": [
						"{{TEST_SETTING_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "b7c52ce5-4e0c-48b7-9386-ec89973e8e67",
			"name": "Settings (settings/:id)",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"test_url3\",\n\t\"config\": \"https://www.boostappstore.com :)\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}settings/{{TEST_SETTING_ID}}",
					"host": [
						"{{SERVER}}settings"
					],
					"path": [
						"{{TEST_SETTING_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "b04ac59a-152f-4afe-9333-252f0b9ddffd",
			"name": "Server (server/image)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d36c4ce3-9694-467e-a8c5-b334c61820df",
						"type": "text/javascript",
						"exec": [
							"// var jsonData = JSON.parse(responseBody);",
							"",
							"// // Status code",
							"// tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"// // Token check",
							"// tests[\"Key has an id\"] = (jsonData[\"id\"].length > 0)",
							"// tests[\"Key has an name\"] = (jsonData[\"name\"].length > 0)",
							"// tests[\"Key has a token\"] = (jsonData[\"config\"].length > 0)",
							"",
							"// postman.setEnvironmentVariable(\"TEST_SETTING_ID\", jsonData[\"id\"]);",
							"",
							"",
							"// // Content type",
							"// tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"// tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{SERVER}}server/image/",
					"host": [
						"{{SERVER}}server"
					],
					"path": [
						"image",
						""
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "e5083905-a9da-4fb3-bda6-84087625032c",
			"name": "Server (server/image/64)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d36c4ce3-9694-467e-a8c5-b334c61820df",
						"type": "text/javascript",
						"exec": [
							"// var jsonData = JSON.parse(responseBody);",
							"",
							"// // Status code",
							"// tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"// // Token check",
							"// tests[\"Key has an id\"] = (jsonData[\"id\"].length > 0)",
							"// tests[\"Key has an name\"] = (jsonData[\"name\"].length > 0)",
							"// tests[\"Key has a token\"] = (jsonData[\"config\"].length > 0)",
							"",
							"// postman.setEnvironmentVariable(\"TEST_SETTING_ID\", jsonData[\"id\"]);",
							"",
							"",
							"// // Content type",
							"// tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"// tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{SERVER}}server/image/64",
					"host": [
						"{{SERVER}}server"
					],
					"path": [
						"image",
						"64"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "f883ca64-476b-458e-a9d8-154b255e3ce1",
			"name": "Server (server/image/128)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d36c4ce3-9694-467e-a8c5-b334c61820df",
						"type": "text/javascript",
						"exec": [
							"// var jsonData = JSON.parse(responseBody);",
							"",
							"// // Status code",
							"// tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"// // Token check",
							"// tests[\"Key has an id\"] = (jsonData[\"id\"].length > 0)",
							"// tests[\"Key has an name\"] = (jsonData[\"name\"].length > 0)",
							"// tests[\"Key has a token\"] = (jsonData[\"config\"].length > 0)",
							"",
							"// postman.setEnvironmentVariable(\"TEST_SETTING_ID\", jsonData[\"id\"]);",
							"",
							"",
							"// // Content type",
							"// tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"// tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{SERVER}}server/image/128",
					"host": [
						"{{SERVER}}server"
					],
					"path": [
						"image",
						"128"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "78ebe129-efe8-44cf-9c34-157653a294b4",
			"name": "Server (server/image/192)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d36c4ce3-9694-467e-a8c5-b334c61820df",
						"type": "text/javascript",
						"exec": [
							"// var jsonData = JSON.parse(responseBody);",
							"",
							"// // Status code",
							"// tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"// // Token check",
							"// tests[\"Key has an id\"] = (jsonData[\"id\"].length > 0)",
							"// tests[\"Key has an name\"] = (jsonData[\"name\"].length > 0)",
							"// tests[\"Key has a token\"] = (jsonData[\"config\"].length > 0)",
							"",
							"// postman.setEnvironmentVariable(\"TEST_SETTING_ID\", jsonData[\"id\"]);",
							"",
							"",
							"// // Content type",
							"// tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"// tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{SERVER}}server/image/192",
					"host": [
						"{{SERVER}}server"
					],
					"path": [
						"image",
						"192"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "ab668f1a-c524-48c1-ba73-28fd26842cb1",
			"name": "Server (server/image/256)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d36c4ce3-9694-467e-a8c5-b334c61820df",
						"type": "text/javascript",
						"exec": [
							"// var jsonData = JSON.parse(responseBody);",
							"",
							"// // Status code",
							"// tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"// // Token check",
							"// tests[\"Key has an id\"] = (jsonData[\"id\"].length > 0)",
							"// tests[\"Key has an name\"] = (jsonData[\"name\"].length > 0)",
							"// tests[\"Key has a token\"] = (jsonData[\"config\"].length > 0)",
							"",
							"// postman.setEnvironmentVariable(\"TEST_SETTING_ID\", jsonData[\"id\"]);",
							"",
							"",
							"// // Content type",
							"// tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"// tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{SERVER}}server/image/256",
					"host": [
						"{{SERVER}}server"
					],
					"path": [
						"image",
						"256"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "27f810dc-ec54-42c2-9bd4-a23e2b5b9f8a",
			"name": "Server (server/image/512)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d36c4ce3-9694-467e-a8c5-b334c61820df",
						"type": "text/javascript",
						"exec": [
							"// var jsonData = JSON.parse(responseBody);",
							"",
							"// // Status code",
							"// tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"// // Token check",
							"// tests[\"Key has an id\"] = (jsonData[\"id\"].length > 0)",
							"// tests[\"Key has an name\"] = (jsonData[\"name\"].length > 0)",
							"// tests[\"Key has a token\"] = (jsonData[\"config\"].length > 0)",
							"",
							"// postman.setEnvironmentVariable(\"TEST_SETTING_ID\", jsonData[\"id\"]);",
							"",
							"",
							"// // Content type",
							"// tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"// tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{SERVER}}server/image/512",
					"host": [
						"{{SERVER}}server"
					],
					"path": [
						"image",
						"512"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "0f0f45f3-41aa-48a1-a613-159167658712",
			"name": "Server (server/image)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d36c4ce3-9694-467e-a8c5-b334c61820df",
						"type": "text/javascript",
						"exec": [
							"// var jsonData = JSON.parse(responseBody);",
							"",
							"// // Status code",
							"// tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"// // Token check",
							"// tests[\"Key has an id\"] = (jsonData[\"id\"].length > 0)",
							"// tests[\"Key has an name\"] = (jsonData[\"name\"].length > 0)",
							"// tests[\"Key has a token\"] = (jsonData[\"config\"].length > 0)",
							"",
							"// postman.setEnvironmentVariable(\"TEST_SETTING_ID\", jsonData[\"id\"]);",
							"",
							"",
							"// // Content type",
							"// tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"// tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{SERVER}}server/image",
					"host": [
						"{{SERVER}}server"
					],
					"path": [
						"image"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "e8693345-8f9c-47c1-bbfe-8a08534b193e",
			"name": "Teapot",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}teapot",
					"host": [
						"{{SERVER}}teapot"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "0b885cdb-41d7-4f9e-bab0-ae36a17964ab",
			"name": "Ping",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}ping",
					"host": [
						"{{SERVER}}ping"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "f0e446d6-41a9-4f8e-ab36-56ab01bf0969",
			"name": "Errors",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}errors",
					"host": [
						"{{SERVER}}errors"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "75245dda-56ce-4699-aa9c-346eaca47a18",
			"name": "Info",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}info",
					"host": [
						"{{SERVER}}info"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{JWT_AUTH}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "bd8a2c58-ab40-4e1d-8335-cca3a3a32c6d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "ce39d7b5-21e6-4183-ae88-4c99099551b3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}