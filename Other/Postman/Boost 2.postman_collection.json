{
	"info": {
		"_postman_id": "8fa44547-1ad4-e1fb-53c1-9f93fe4a89b2",
		"name": "Boost 2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"_postman_id": "2e30d565-3a78-4894-b380-f3eceea709f3",
			"name": "CORS",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "OPTIONS",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{SERVER}}ping",
					"host": [
						"{{SERVER}}ping"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "79b6d727-480c-47c5-8d56-dbd470c79e0e",
			"name": "Install",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"admin@liveui.io\",\n  \"password\": \"password123\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}install",
					"host": [
						"{{SERVER}}install"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "edc34cf6-0389-42a1-9451-6de1d86331ff",
			"name": "Demo",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"admin@liveui.io\",\n  \"password\": \"password123\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}demo",
					"host": [
						"{{SERVER}}demo"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "80bb904a-2553-4860-ba81-75122e3aaf2c",
			"name": "Re-Install",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"admin@liveui.io\",\n  \"password\": \"password123\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}reinstall",
					"host": [
						"{{SERVER}}reinstall"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "a2d4a6cc-3db0-41a1-ab9e-214000a94cf2",
			"name": "Un-Install",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"admin@liveui.io\",\n  \"password\": \"password123\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}uninstall",
					"host": [
						"{{SERVER}}uninstall"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "71f5d03c-78bd-4751-9091-8dccf43903f5",
			"name": "Auth (BASIC)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0a4fca42-18ee-49ac-bbe5-0fdca7102e0a",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// Token check",
							"tests[\"Token has an id\"] = (jsonData[\"id\"].length > 10)",
							"tests[\"Token has a user\"] = (jsonData[\"user\"][\"id\"].length > 10)",
							"tests[\"Token has a token\"] = (jsonData[\"token\"].length > 10)",
							"tests[\"Token has expires\"] = (jsonData[\"expires\"] > 543533823)",
							"",
							"postman.setEnvironmentVariable(\"AUTH_TOKEN\", jsonData[\"token\"]);",
							"",
							"// JWT",
							"var jwtAuthExists = responseHeaders.hasOwnProperty(\"Authorization\") || responseHeaders.hasOwnProperty(\"authorization\");",
							"tests[\"JWT Token is present\"] = jwtAuthExists;",
							"",
							"if (jwtAuthExists) {",
							"    var a = responseHeaders[\"Authorization\"] || responseHeaders[\"authorization\"];",
							"    tests[\"JWT token has a bearer\"] = a.has(\"Bearer \");",
							"    tests[\"JWT token has a value\"] = (a.length > 15);",
							"    postman.setEnvironmentVariable(\"JWT_AUTH\", a.substring(7));",
							"}",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "0d43ff69-0ee0-44f2-b2f1-f0a273c92a0b",
						"type": "text/javascript",
						"exec": [
							"var authorize = 'var server = pm.environment.get(\"SERVER\");\\",
							"var token = pm.environment.get(\"AUTH_TOKEN\");\\",
							"pm.sendRequest({\\",
							"    url: server + \"token\",\\",
							"    method: \"GET\",\\",
							"    header: \"Authorization:Token \" + token\\",
							"}, function (err, response) {\\",
							"    console.log(response.headers);\\",
							"    if (response) {\\",
							"        var a = response.headers.get(\"authorization\").substring(7);\\",
							"        pm.environment.set(\"JWT_AUTH\", a);\\",
							"    }\\",
							"});';",
							"",
							"pm.environment.set(\"func:authorize\", authorize);"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@liveui.io",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"admin@liveui.io\",\n  \"password\": \"password123\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}auth",
					"host": [
						"{{SERVER}}auth"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "2d39ce07-81d5-47fc-a62d-e60a20fe2392",
			"name": "Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fb96d006-ff14-4369-ab66-b908f5816ac3",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// Token check",
							"tests[\"Token has an id\"] = (jsonData[\"id\"].length > 10)",
							"tests[\"Token has a user\"] = (jsonData[\"user\"][\"id\"].length > 10)",
							"tests[\"Token has a token\"] = (jsonData[\"token\"].length > 10)",
							"tests[\"Token has expires\"] = (jsonData[\"expires\"].length > 10)",
							"",
							"postman.setEnvironmentVariable(\"AUTH_TOKEN\", jsonData[\"token\"]);",
							"",
							"// JWT",
							"var jwtAuthExists = responseHeaders.hasOwnProperty(\"Authorization\") || responseHeaders.hasOwnProperty(\"authorization\");",
							"tests[\"JWT Token is present\"] = jwtAuthExists;",
							"",
							"if (jwtAuthExists) {",
							"    var a = responseHeaders[\"Authorization\"] || responseHeaders[\"authorization\"];",
							"    tests[\"JWT token has a bearer\"] = a.has(\"Bearer \");",
							"    tests[\"JWT token has a value\"] = (a.length > 15);",
							"    postman.setEnvironmentVariable(\"JWT_AUTH\", a.substring(7));",
							"}",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "bfe6c598-e7ad-4ae4-b73b-7aa7e15e77b5",
						"type": "text/javascript",
						"exec": [
							"var authorize = 'var server = pm.environment.get(\"SERVER\");\\",
							"var token = pm.environment.get(\"AUTH_TOKEN\");\\",
							"pm.sendRequest({\\",
							"    url: server + \"token\",\\",
							"    method: \"GET\",\\",
							"    header: \"Authorization:Token \" + token\\",
							"}, function (err, response) {\\",
							"    console.log(response.headers);\\",
							"    if (response) {\\",
							"        var a = response.headers.get(\"authorization\").substring(7);\\",
							"        pm.environment.set(\"JWT_AUTH\", a);\\",
							"    }\\",
							"});';",
							"",
							"pm.environment.set(\"func:authorize\", authorize);"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"admin@liveui.io\",\n  \"password\": \"admin\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}auth",
					"host": [
						"{{SERVER}}auth"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "8739e167-ccb0-4fe1-98f6-b56ad4141c63",
			"name": "JWT refresh",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0c9fe589-fee6-417f-9105-96a38bbe8b6e",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// Token check",
							"tests[\"Token has an id\"] = (jsonData[\"id\"].length > 10)",
							"tests[\"Token has a user\"] = (jsonData[\"user\"][\"id\"].length > 10)",
							"tests[\"Token has expires\"] = (jsonData[\"expires\"] > 543533823)",
							"",
							"// JWT",
							"var jwtAuthExists = responseHeaders.hasOwnProperty(\"Authorization\") || responseHeaders.hasOwnProperty(\"authorization\");",
							"tests[\"JWT Token is present\"] = jwtAuthExists;",
							"",
							"if (jwtAuthExists) {",
							"    var a = responseHeaders[\"Authorization\"] || responseHeaders[\"authorization\"];",
							"    tests[\"JWT token has a bearer\"] = a.has(\"Bearer \");",
							"    tests[\"JWT token has a value\"] = (a.length > 15);",
							"    postman.setEnvironmentVariable(\"JWT_AUTH\", a.substring(7));",
							"}",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "90616aa4-124c-423d-bf50-1cdbe31f8fe6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Token {{AUTH_TOKEN}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"admin@liveui.io\",\n  \"password\": \"password123\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}token",
					"host": [
						"{{SERVER}}token"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "aa250781-a2f0-497f-8e34-2e7a817e1ed7",
			"name": "JWT refresh",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1512bc88-43bb-4ec2-a819-b0872e3cae15",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// Token check",
							"tests[\"Token has an id\"] = (jsonData[\"id\"].length > 10)",
							"tests[\"Token has a user_id\"] = (jsonData[\"user\"][\"id\"].length > 10)",
							"tests[\"Token has expires\"] = (jsonData[\"expires\"] > 543533823)",
							"",
							"// JWT",
							"var jwtAuthExists = responseHeaders.hasOwnProperty(\"Authorization\") || responseHeaders.hasOwnProperty(\"authorization\");",
							"tests[\"JWT Token is present\"] = jwtAuthExists;",
							"",
							"if (jwtAuthExists) {",
							"    var a = responseHeaders[\"Authorization\"] || responseHeaders[\"authorization\"];",
							"    tests[\"JWT token has a bearer\"] = a.has(\"Bearer \");",
							"    tests[\"JWT token has a value\"] = (a.length > 15);",
							"    postman.setEnvironmentVariable(\"JWT_AUTH\", a.substring(7));",
							"}",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"token\": \"{{AUTH_TOKEN}}\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}token",
					"host": [
						"{{SERVER}}token"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "1ffe6971-7a52-4c38-b6ff-8236216d3332",
			"name": "Teams (teams)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "116dcf70-2c69-453a-a623-ab4762e9962b",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Admin\",\n    \"identifier\": \"admin5\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}teams",
					"host": [
						"{{SERVER}}teams"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "e9e346a6-1237-45b7-8ac0-b9fe0125465a",
			"name": "Teams (teams)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "50c4544a-37b5-4294-9dbe-c06e3fe7e21b",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"if (responseCode.code === 201) {",
							"    // Token check",
							"    tests[\"Team has an id\"] = (jsonData[\"id\"].length > 0)",
							"    tests[\"Team has an name\"] = (jsonData[\"name\"].length > 0)",
							"    tests[\"Team has an identifier\"] = (jsonData[\"identifier\"].length > 0)",
							"    ",
							"    postman.setEnvironmentVariable(\"TEST_TEAM_ID\", jsonData[\"id\"]);",
							"}",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");",
							"",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "56d344a5-51cb-4ee9-8641-250a8cfc94dd",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Admin Yo!\",\n    \"identifier\": \"admin-yo\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}teams",
					"host": [
						"{{SERVER}}teams"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "f876106b-8d22-4ae4-ae44-f7d49aef628f",
			"name": "Teams (teams/check)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "dec41314-4b28-4144-b0ff-84ece146d04d",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"identifier\": \"admin\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}teams/check",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"check"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "7a436f23-0235-42fd-9bba-f5f8cedea138",
			"name": "Teams (teams/:id)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "81cd4170-4a0e-4db5-90b4-fd3cf82170a1",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"if (responseCode.code === 200) {",
							"    // Token check",
							"    tests[\"Team has an id\"] = (jsonData[\"id\"].length > 0)",
							"    tests[\"Team has an name\"] = (jsonData[\"name\"].length > 0)",
							"    tests[\"Team has an identifier\"] = (jsonData[\"identifier\"].length > 0)",
							"}",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");",
							"",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "19a1abfc-56ea-4447-8d56-05b2b7906765",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Admin\",\n    \"identifier\": \"admin5\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "bd28f61c-dcba-4c5d-b6b2-bada68acd315",
			"name": "Teams (teams/:id/link)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "bacdfa30-78f2-4948-86d6-9eee95a80e1f",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": \"{{TEST_USER_ID}}\",\n}"
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}/link",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}",
						"link"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "2e02d462-d83f-4fe8-89b2-e7360316f37e",
			"name": "Teams (teams/:id/unlink)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d01d357f-0e41-41de-8bf0-49ff320a6c93",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": \"{{TEST_USER_ID}}\",\n}"
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}/unlink",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}",
						"unlink"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "b05cb74d-089e-4bb3-aaee-4d10dc23108b",
			"name": "Teams (teams/:id/users)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9755c07f-4230-4701-a491-d2b7c1aa5370",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Admin\",\n    \"identifier\": \"admin5\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}/users",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "2e131333-4ce3-4414-bfe8-2753e6b4e889",
			"name": "Teams (teams/:id)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "16192de3-a019-427d-8562-ddf0bb2baec4",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Admin\",\n    \"identifier\": \"admin5\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "5f46700b-062a-4cb8-bf9c-d0a47fedf521",
			"name": "Teams (teams/:id)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "dc69f392-b674-49ed-aad7-1d6f885713a8",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Admin\",\n    \"identifier\": \"admin5\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "856972b7-3b26-4328-9653-9b60be12f831",
			"name": "Teams (teams/:id/config)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "600477c9-54af-41a9-8258-5bcdc511e5a2",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"if (responseCode.code === 200) {",
							"    tests[\"Config has a team_id\"] = (jsonData[\"team_id\"].length > 0)",
							"}",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");",
							"",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "97f737f8-dcd1-41b6-8577-1d136c72ef2d",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Admin\",\n    \"identifier\": \"admin5\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}/config",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}",
						"config"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "a7c2b6a9-160f-45b5-ab10-b31203d26526",
			"name": "Teams (teams/:id/config)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a72c6134-9233-4932-8191-c9eacbd1659f",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"if (responseCode.code === 200) {",
							"    tests[\"Config has a team_id\"] = (jsonData[\"team_id\"].length > 0)",
							"}",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");",
							"",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "19a1abfc-56ea-4447-8d56-05b2b7906765",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"theme\": {\n        \"primary_color\": \"000000\",\n        \"primary_background_color\": \"FFFFFF\",\n        \"primary_button_color\": \"FFFFFF\",\n        \"primary_button_background_color\": \"E94F92\"\n    },\n    \"apps\": {\n    \t\"ios\": \"https://itunes.apple.com/gb/app/rekola/id888759232?mt=8\",\n    \t\"android\": \"https://play.google.com/store/apps/details?id=cz.rekola.app\"\n    }\n}\t"
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}/config",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}",
						"config"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "b853936a-fb47-40ca-bb71-6660dca0c518",
			"name": "Users (users)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "476b1181-999e-4143-a808-c06c4df8796d",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}users",
					"host": [
						"{{SERVER}}users"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "5e809c9b-be1a-4d9a-a4ba-9e47ae428303",
			"name": "Users (users/global)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "692d2e1a-e43e-4587-b518-85fbe7ec8598",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}users/global?search=ad",
					"host": [
						"{{SERVER}}users"
					],
					"path": [
						"global"
					],
					"query": [
						{
							"key": "search",
							"value": "ad"
						}
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "f3604008-d734-4aad-a1de-690305c4f46c",
			"name": "Users (users)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "245c9eb5-1349-4660-8e3f-8a2e2ece34a5",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\n        \"email\": \"rafaj@mangoweb.cz\",\n        \"username\": \"rafiki270\",\n        \"lastname\": \"Ondrej\",\n        \"firstname\": \"Rafaj\",\n        \"password\": \"aaaaaa\"\n    }"
				},
				"url": {
					"raw": "{{SERVER}}users",
					"host": [
						"{{SERVER}}users"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "60585559-c0c1-4361-b573-fd4ad27e0bf5",
			"name": "Apps (apps)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f1a88013-f86e-409e-b4b8-07c974a4031a",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}apps?limit=20",
					"host": [
						"{{SERVER}}apps"
					],
					"query": [
						{
							"key": "limit",
							"value": "20"
						}
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "e6bf373f-28c1-46b5-893f-d7f19d825235",
			"name": "Apps (apps?filters)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b5bd4386-09e9-47ac-9eab-c0b25836a986",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}apps?limit=20&page=40&platform=ios",
					"host": [
						"{{SERVER}}apps"
					],
					"query": [
						{
							"key": "limit",
							"value": "20"
						},
						{
							"key": "page",
							"value": "40"
						},
						{
							"key": "platform",
							"value": "ios"
						}
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "92e5bb88-ca09-4d75-afd4-f81ad994038e",
			"name": "Apps (apps/overview)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "091247ec-a5f8-40a7-86f9-67f2f4912de9",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}apps/overview?limit=3",
					"host": [
						"{{SERVER}}apps"
					],
					"path": [
						"overview"
					],
					"query": [
						{
							"key": "limit",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "06835790-f5aa-4529-abeb-a6aca0c5e50b",
			"name": "Apps (teams/:id/apps/overview)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7cdb43e8-605a-4109-b4d9-2018354f7e6b",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// Token check",
							"tests[\"App has an id\"] = (jsonData[\"id\"].length > 0)",
							"tests[\"App has a name\"] = (jsonData[\"name\"].length > 0)",
							"tests[\"App has an identifier\"] = (jsonData[\"identifier\"].length > 2)",
							"",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "51d1f430-a5a1-45d2-9272-014852176c70",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}/apps/overview",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}",
						"apps",
						"overview"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "14875607-6861-406a-88c8-36f571c99a3e",
			"name": "Apps (teams/:id/apps/info)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7cdb43e8-605a-4109-b4d9-2018354f7e6b",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// Token check",
							"tests[\"App has an id\"] = (jsonData[\"id\"].length > 0)",
							"tests[\"App has a name\"] = (jsonData[\"name\"].length > 0)",
							"tests[\"App has an identifier\"] = (jsonData[\"identifier\"].length > 2)",
							"",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "27f558bf-debf-40ba-8557-3583791ac25b",
						"type": "text/javascript",
						"exec": [
							"eval(pm.environment.get(\"func:authorize\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}/apps/info",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}",
						"apps",
						"info"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "75740075-b61e-432a-ad8c-44967602079e",
			"name": "Apps (teams/:id/apps)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e5df00c9-6382-47b9-98ce-f2fc1870ff1b",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"// Token check",
							"tests[\"App has an id\"] = (jsonData[\"id\"].length > 0)",
							"tests[\"App has a name\"] = (jsonData[\"name\"].length > 0)",
							"tests[\"App has an identifier\"] = (jsonData[\"identifier\"].length > 2)",
							"",
							"postman.setEnvironmentVariable(\"APP_ID\", jsonData[\"id\"]);",
							"",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}/apps",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}",
						"apps"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "01354aa7-9941-4b7b-9ebd-dc5ae2ee7214",
			"name": "Apps (apps?token)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e5df00c9-6382-47b9-98ce-f2fc1870ff1b",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"// Token check",
							"tests[\"App has an id\"] = (jsonData[\"id\"].length > 0)",
							"tests[\"App has a name\"] = (jsonData[\"name\"].length > 0)",
							"tests[\"App has an identifier\"] = (jsonData[\"identifier\"].length > 2)",
							"",
							"postman.setEnvironmentVariable(\"APP_ID\", jsonData[\"id\"]);",
							"",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{SERVER}}apps?token={{TEST_UPLOAD_KEY}}&tags=tag1|tag2|tag3|tag4",
					"host": [
						"{{SERVER}}apps"
					],
					"query": [
						{
							"key": "token",
							"value": "{{TEST_UPLOAD_KEY}}"
						},
						{
							"key": "tags",
							"value": "tag1|tag2|tag3|tag4"
						}
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "33969c61-5556-480c-8082-295ba19e6f4e",
			"name": "Apps (apps/:id)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{SERVER}}apps/{{APP_ID}}",
					"host": [
						"{{SERVER}}apps"
					],
					"path": [
						"{{APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "e902e4b3-18dc-4d80-aee7-39862ea1c813",
			"name": "Apps (apps/:id/auth)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c075b435-49e3-494c-940d-02f1613f4776",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"if (responseCode.code === 200) {",
							"    // Token check",
							"    tests[\"Download token has an ios url\"] = (jsonData[\"ios\"].length > 10)",
							"    tests[\"Download token has a file url\"] = (jsonData[\"file\"].length > 10)",
							"    tests[\"Download token has a token\"] = (jsonData[\"token\"].length > 10)",
							"    tests[\"Download token has a plist url\"] = (jsonData[\"plist\"].length > 10)",
							"    tests[\"Download token has an app_id\"] = (jsonData[\"app_id\"].length > 10)",
							"    ",
							"    postman.setEnvironmentVariable(\"DOWNLOAD_TOKEN\", jsonData[\"token\"]);",
							"}",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{SERVER}}apps/{{APP_ID}}/auth",
					"host": [
						"{{SERVER}}apps"
					],
					"path": [
						"{{APP_ID}}",
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "8d2da579-5f84-497c-a1e3-62bbe1eb5f8e",
			"name": "Apps (apps/:id/icon)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "090b0686-dd13-480c-a2a8-ac34491fe080",
						"type": "text/javascript",
						"exec": [
							"// Status code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"image/png\");"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{SERVER}}apps/{{APP_ID}}/icon",
					"host": [
						"{{SERVER}}apps"
					],
					"path": [
						"{{APP_ID}}",
						"icon"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "9b9615bb-00f5-4175-bf37-fd28cbc9fa25",
			"name": "Apps (apps/plist)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{SERVER}}apps/plist?token={{DOWNLOAD_TOKEN}}",
					"host": [
						"{{SERVER}}apps"
					],
					"path": [
						"plist"
					],
					"query": [
						{
							"key": "token",
							"value": "{{DOWNLOAD_TOKEN}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "745d8568-55e6-4ad1-9cce-de5d1327cb43",
			"name": "Apps (apps/file)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{SERVER}}apps/file?token={{DOWNLOAD_TOKEN}}",
					"host": [
						"{{SERVER}}apps"
					],
					"path": [
						"file"
					],
					"query": [
						{
							"key": "token",
							"value": "{{DOWNLOAD_TOKEN}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "292a67b1-b559-4a07-8e34-eb941fbf475d",
			"name": "Apps (apps/:id/tags)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{SERVER}}apps/{{APP_ID}}/tags",
					"host": [
						"{{SERVER}}apps"
					],
					"path": [
						"{{APP_ID}}",
						"tags"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "2415878a-525a-4679-acce-545730080cfc",
			"name": "Apps (apps/:id)",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{SERVER}}apps/{{APP_ID}}",
					"host": [
						"{{SERVER}}apps"
					],
					"path": [
						"{{APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "74db3d19-c8f1-48a5-a6c5-8b25877e2713",
			"name": "Upload keys (keys)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{SERVER}}keys",
					"host": [
						"{{SERVER}}keys"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "896e5ec2-68e8-466f-9d4e-fdba48bb8932",
			"name": "Upload keys (apps/:id/keys)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}/keys",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}",
						"keys"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "c318dd4a-7371-46f7-b535-5137dfa581c9",
			"name": "Upload keys (keys/:id)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{SERVER}}keys/{{TEST_UPLOAD_KEY_ID}}",
					"host": [
						"{{SERVER}}keys"
					],
					"path": [
						"{{TEST_UPLOAD_KEY_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "75690b03-6520-4812-84db-05cc1b8e4731",
			"name": "Upload keys (apps/:id/keys)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "710a0a32-3cbc-4cb2-a3d1-aaa38465ab17",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"// Token check",
							"tests[\"Key has an id\"] = (jsonData[\"id\"].length > 0)",
							"tests[\"Key has an name\"] = (jsonData[\"name\"].length > 0)",
							"tests[\"Key has a token\"] = (jsonData[\"token\"].length > 0)",
							"tests[\"Key has a correct team_id\"] = (jsonData[\"team_id\"] == postman.getEnvironmentVariable(\"TEST_TEAM_ID\"))",
							"",
							"postman.setEnvironmentVariable(\"TEST_UPLOAD_KEY_ID\", jsonData[\"id\"]);",
							"postman.setEnvironmentVariable(\"TEST_UPLOAD_KEY\", jsonData[\"token\"]);",
							"",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Upload key yo!\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}teams/{{TEST_TEAM_ID}}/keys",
					"host": [
						"{{SERVER}}teams"
					],
					"path": [
						"{{TEST_TEAM_ID}}",
						"keys"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "a1e4c3d0-bf3d-4afc-912f-4798cbfbb49e",
			"name": "Upload keys (keys/:id)",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Upload key changed yohoho!\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}keys/{{TEST_UPLOAD_KEY_ID}}",
					"host": [
						"{{SERVER}}keys"
					],
					"path": [
						"{{TEST_UPLOAD_KEY_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "f96b2a8e-66ff-4bdd-8a07-c19eb48a9667",
			"name": "Upload keys (keys/:id)",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_AUTH}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{SERVER}}keys/{{TEST_UPLOAD_KEY_ID}}",
					"host": [
						"{{SERVER}}keys"
					],
					"path": [
						"{{TEST_UPLOAD_KEY_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "b6346edf-49b0-43f2-bf83-c69c23f843ac",
			"name": "Unknown URL",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}unknown",
					"host": [
						"{{SERVER}}unknown"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "21b13784-c3d9-4191-b97c-c2e40d456b4e",
			"name": "Database info",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}tables",
					"host": [
						"{{SERVER}}tables"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "9ac1695d-24b5-4f80-a372-9d9449ddc4fd",
			"name": "Settings (settings)",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}settings",
					"host": [
						"{{SERVER}}settings"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "f4fb98ca-bf40-4798-afed-59b0fc35aac4",
			"name": "Settings (settings?plain)",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}settings?plain=true",
					"host": [
						"{{SERVER}}settings"
					],
					"query": [
						{
							"key": "plain",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "422e7e19-9ae2-40bf-a018-b72916a09db5",
			"name": "Settings (settings)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a5091550-b98b-464b-bb6f-abfc9a340a46",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Status code",
							"tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"// Token check",
							"tests[\"Key has an id\"] = (jsonData[\"id\"].length > 0)",
							"tests[\"Key has an name\"] = (jsonData[\"name\"].length > 0)",
							"tests[\"Key has a token\"] = (jsonData[\"config\"].length > 0)",
							"",
							"postman.setEnvironmentVariable(\"TEST_SETTING_ID\", jsonData[\"id\"]);",
							"",
							"",
							"// Content type",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"test_url2\",\n\t\"config\": \"https://www.boostappstore.com\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}settings",
					"host": [
						"{{SERVER}}settings"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "e5b41ecf-a01b-4212-8f2d-866115f6eaa7",
			"name": "Settings (settings/:id)",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"test_url3\",\n\t\"config\": \"https://www.boostappstore.com :)\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}settings/{{TEST_SETTING_ID}}",
					"host": [
						"{{SERVER}}settings"
					],
					"path": [
						"{{TEST_SETTING_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "39764e9b-1525-4446-8af5-7505b86f5dae",
			"name": "Settings (settings/:id)",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"test_url3\",\n\t\"config\": \"https://www.boostappstore.com :)\"\n}"
				},
				"url": {
					"raw": "{{SERVER}}settings/{{TEST_SETTING_ID}}",
					"host": [
						"{{SERVER}}settings"
					],
					"path": [
						"{{TEST_SETTING_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "71bf41c6-2fc8-403b-8f05-95fe3b6f0803",
			"name": "Server (server/image)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d36c4ce3-9694-467e-a8c5-b334c61820df",
						"type": "text/javascript",
						"exec": [
							"// var jsonData = JSON.parse(responseBody);",
							"",
							"// // Status code",
							"// tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"// // Token check",
							"// tests[\"Key has an id\"] = (jsonData[\"id\"].length > 0)",
							"// tests[\"Key has an name\"] = (jsonData[\"name\"].length > 0)",
							"// tests[\"Key has a token\"] = (jsonData[\"config\"].length > 0)",
							"",
							"// postman.setEnvironmentVariable(\"TEST_SETTING_ID\", jsonData[\"id\"]);",
							"",
							"",
							"// // Content type",
							"// tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"// tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{SERVER}}server/image/",
					"host": [
						"{{SERVER}}server"
					],
					"path": [
						"image",
						""
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "46d7a0eb-61af-4336-97d6-8560df2f957c",
			"name": "Server (server/image/64)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d36c4ce3-9694-467e-a8c5-b334c61820df",
						"type": "text/javascript",
						"exec": [
							"// var jsonData = JSON.parse(responseBody);",
							"",
							"// // Status code",
							"// tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"// // Token check",
							"// tests[\"Key has an id\"] = (jsonData[\"id\"].length > 0)",
							"// tests[\"Key has an name\"] = (jsonData[\"name\"].length > 0)",
							"// tests[\"Key has a token\"] = (jsonData[\"config\"].length > 0)",
							"",
							"// postman.setEnvironmentVariable(\"TEST_SETTING_ID\", jsonData[\"id\"]);",
							"",
							"",
							"// // Content type",
							"// tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"// tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{SERVER}}server/image/64",
					"host": [
						"{{SERVER}}server"
					],
					"path": [
						"image",
						"64"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "12b1f62b-ca2a-4dc1-ad42-ee9c882a5e5b",
			"name": "Server (server/image/128)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d36c4ce3-9694-467e-a8c5-b334c61820df",
						"type": "text/javascript",
						"exec": [
							"// var jsonData = JSON.parse(responseBody);",
							"",
							"// // Status code",
							"// tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"// // Token check",
							"// tests[\"Key has an id\"] = (jsonData[\"id\"].length > 0)",
							"// tests[\"Key has an name\"] = (jsonData[\"name\"].length > 0)",
							"// tests[\"Key has a token\"] = (jsonData[\"config\"].length > 0)",
							"",
							"// postman.setEnvironmentVariable(\"TEST_SETTING_ID\", jsonData[\"id\"]);",
							"",
							"",
							"// // Content type",
							"// tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"// tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{SERVER}}server/image/128",
					"host": [
						"{{SERVER}}server"
					],
					"path": [
						"image",
						"128"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "09afd946-e92f-4cdf-9d59-fc03baff60e0",
			"name": "Server (server/image/192)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d36c4ce3-9694-467e-a8c5-b334c61820df",
						"type": "text/javascript",
						"exec": [
							"// var jsonData = JSON.parse(responseBody);",
							"",
							"// // Status code",
							"// tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"// // Token check",
							"// tests[\"Key has an id\"] = (jsonData[\"id\"].length > 0)",
							"// tests[\"Key has an name\"] = (jsonData[\"name\"].length > 0)",
							"// tests[\"Key has a token\"] = (jsonData[\"config\"].length > 0)",
							"",
							"// postman.setEnvironmentVariable(\"TEST_SETTING_ID\", jsonData[\"id\"]);",
							"",
							"",
							"// // Content type",
							"// tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"// tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{SERVER}}server/image/192",
					"host": [
						"{{SERVER}}server"
					],
					"path": [
						"image",
						"192"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "33ccc43a-fac8-47b0-9a6a-714395103f15",
			"name": "Server (server/image/256)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d36c4ce3-9694-467e-a8c5-b334c61820df",
						"type": "text/javascript",
						"exec": [
							"// var jsonData = JSON.parse(responseBody);",
							"",
							"// // Status code",
							"// tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"// // Token check",
							"// tests[\"Key has an id\"] = (jsonData[\"id\"].length > 0)",
							"// tests[\"Key has an name\"] = (jsonData[\"name\"].length > 0)",
							"// tests[\"Key has a token\"] = (jsonData[\"config\"].length > 0)",
							"",
							"// postman.setEnvironmentVariable(\"TEST_SETTING_ID\", jsonData[\"id\"]);",
							"",
							"",
							"// // Content type",
							"// tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"// tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{SERVER}}server/image/256",
					"host": [
						"{{SERVER}}server"
					],
					"path": [
						"image",
						"256"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "4b03c617-07e2-40c6-97ad-647ad8dc64dc",
			"name": "Server (server/image/512)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d36c4ce3-9694-467e-a8c5-b334c61820df",
						"type": "text/javascript",
						"exec": [
							"// var jsonData = JSON.parse(responseBody);",
							"",
							"// // Status code",
							"// tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"// // Token check",
							"// tests[\"Key has an id\"] = (jsonData[\"id\"].length > 0)",
							"// tests[\"Key has an name\"] = (jsonData[\"name\"].length > 0)",
							"// tests[\"Key has a token\"] = (jsonData[\"config\"].length > 0)",
							"",
							"// postman.setEnvironmentVariable(\"TEST_SETTING_ID\", jsonData[\"id\"]);",
							"",
							"",
							"// // Content type",
							"// tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"// tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{SERVER}}server/image/512",
					"host": [
						"{{SERVER}}server"
					],
					"path": [
						"image",
						"512"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "f6eb7083-382b-4783-b5dd-2e13a26da107",
			"name": "Server (server/image)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d36c4ce3-9694-467e-a8c5-b334c61820df",
						"type": "text/javascript",
						"exec": [
							"// var jsonData = JSON.parse(responseBody);",
							"",
							"// // Status code",
							"// tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"// // Token check",
							"// tests[\"Key has an id\"] = (jsonData[\"id\"].length > 0)",
							"// tests[\"Key has an name\"] = (jsonData[\"name\"].length > 0)",
							"// tests[\"Key has a token\"] = (jsonData[\"config\"].length > 0)",
							"",
							"// postman.setEnvironmentVariable(\"TEST_SETTING_ID\", jsonData[\"id\"]);",
							"",
							"",
							"// // Content type",
							"// tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"// tests[\"Content-Type is correct\"] = (postman.getResponseHeader(\"Content-Type\") == \"application/json; charset=utf-8\");"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{SERVER}}server/image",
					"host": [
						"{{SERVER}}server"
					],
					"path": [
						"image"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "497d6ac5-20a6-48d3-bbb9-5a0cd7d35e50",
			"name": "Teapot",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}teapot",
					"host": [
						"{{SERVER}}teapot"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "4ac0b98b-59b2-4cb0-856c-b6902bbffa59",
			"name": "Ping",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}ping",
					"host": [
						"{{SERVER}}ping"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "1479578f-dacf-4f14-bd4f-1e9350aab459",
			"name": "Errors",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}errors",
					"host": [
						"{{SERVER}}errors"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "2e3e64a2-795e-468b-904a-ae453699f16b",
			"name": "Info",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_AUTH}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{SERVER}}info",
					"host": [
						"{{SERVER}}info"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{JWT_AUTH}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "bd8a2c58-ab40-4e1d-8335-cca3a3a32c6d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "ce39d7b5-21e6-4183-ae88-4c99099551b3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}